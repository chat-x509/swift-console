// This file is autogenerated. Do not edit.

import Foundation
import SwiftASN1
import Crypto

@usableFromInline struct ValidationParams: DERImplicitlyTaggable, Hashable, Sendable {
    @inlinable static var defaultIdentifier: ASN1Identifier { .sequence }
    @usableFromInline var seed: ASN1BitString
    @usableFromInline var pgenCounter: ArraySlice<UInt8>

    @inlinable init(seed: ASN1BitString, pgenCounter: ArraySlice<UInt8>) {
        self.seed = seed
        self.pgenCounter = pgenCounter
    }

    @inlinable init(derEncoded root: ASN1Node, withIdentifier identifier: ASN1Identifier) throws {
        self = try DER.sequence(root, identifier: identifier) { nodes in
            let seed = try ASN1BitString(derEncoded: &nodes)
            let pgenCounter = try ArraySlice<UInt8>(derEncoded: &nodes)
            return ValidationParams(seed: seed, pgenCounter: pgenCounter)
        }
    }

    @inlinable func serialize(into coder: inout DER.Serializer, withIdentifier identifier: ASN1Identifier) throws {
        try coder.appendConstructedNode(identifier: identifier) { coder in
            try coder.serialize(self.seed)
            try coder.serialize(self.pgenCounter)
        }
    }

}
